{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleNavButton","step","lastItemIndex","props","images","length","overflowIndexItem","infinity","setState","this","frameSize","itemWidth","animationDuration","className","style","width","transition","borderRadius","border","map","img","transform","display","src","alt","disabled","type","onClick","Component","App","htmlFor","id","value","min","max","onChange","event","target","e","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85c98d5e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleNavButton = (step: number) => {\n    const lastItemIndex = this.props.images.length - 1;\n    let overflowIndexItem = 0;\n\n    let currentItemIndex: number = this.state.currentItemIndex + step;\n\n    if (step < 0) {\n      overflowIndexItem = this.props.infinity ? lastItemIndex : 0;\n      currentItemIndex = currentItemIndex < 0\n        ? overflowIndexItem\n        : currentItemIndex;\n    } else {\n      overflowIndexItem = this.props.infinity ? 0 : lastItemIndex;\n      currentItemIndex = currentItemIndex > lastItemIndex\n        ? overflowIndexItem\n        : currentItemIndex;\n    }\n\n    this.setState(() => ({\n      currentItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: frameSize * itemWidth,\n            transition: `${animationDuration}ms`,\n            borderRadius: `${itemWidth}px`,\n            border: '6px solid grey',\n          }}\n        >\n          {\n            images.map((img) => {\n              return (\n                <li\n                  className=\"Carousel__item\"\n                  key={img}\n                  style={{\n                    transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    style={{\n                      display: 'block',\n                      width: `${itemWidth}px`,\n                    }}\n                    src={img}\n                    alt={img}\n                  />\n                </li>\n              );\n            })\n          }\n        </ul>\n        <div>\n          <button\n            disabled={currentItemIndex <= 1 && !this.props.infinity}\n            type=\"button\"\n            onClick={() => {\n              this.handleNavButton(-step);\n            }}\n          >\n            Prev item\n          </button>\n          <button\n            disabled={\n              currentItemIndex >= images.length - 1 && !this.props.infinity\n            }\n            type=\"button\"\n            onClick={() => {\n              this.handleNavButton(step);\n            }}\n          >\n            Next item\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","// import { setPriority } from 'os';\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <label htmlFor=\"itemWidth\" className=\"App__label\">\n          Item Width:\n          <input\n            id=\"itemWidth\"\n            type=\"number\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              this.setState({\n                itemWidth: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"frameSize\" className=\"App__label\">\n          Frame Size:\n          <input\n            id=\"frameSize\"\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                frameSize: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"step\" className=\"App__label\">\n          Step:\n          <input\n            id=\"step\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                step: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"animation\" className=\"App__label\">\n          Animation:\n          <input\n            id=\"animation\"\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={(event) => {\n              this.setState({\n                animationDuration: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"infinity\" className=\"App__label\">\n          Infinity:\n          <input\n            id=\"infinity\"\n            type=\"checkbox\"\n            onChange={(e) => {\n              this.setState({\n                infinity: e.target.checked,\n              });\n            }}\n          />\n        </label>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}