{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleNavButton","step","lastVisibleItemIndex","props","images","length","frameSize","nextItemIndex","setState","this","itemWidth","animationDuration","infinity","className","style","width","transition","borderRadius","border","map","img","index","transform","src","alt","disabled","type","onClick","Component","App","htmlFor","id","value","min","max","onChange","event","target","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04f8530a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  currentItemIndex: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleNavButton = (step: number) => {\n    const lastVisibleItemIndex\n      = this.props.images.length - this.props.frameSize;\n    const firstVisibleItemIndex = 0;\n    let nextItemIndex = this.state.currentItemIndex + step;\n\n    if (step < 0) {\n      if (this.state.currentItemIndex === firstVisibleItemIndex) {\n        nextItemIndex = lastVisibleItemIndex;\n      } else if (nextItemIndex < firstVisibleItemIndex) {\n        nextItemIndex = firstVisibleItemIndex;\n      }\n    }\n\n    if (step > 0) {\n      if (this.state.currentItemIndex === lastVisibleItemIndex) {\n        nextItemIndex = firstVisibleItemIndex;\n      } else if (nextItemIndex > lastVisibleItemIndex) {\n        nextItemIndex = lastVisibleItemIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextItemIndex,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <div>\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              borderRadius: `${itemWidth}px`,\n              border: '6px solid grey',\n            }}\n          >\n            {\n              images.map((img, index) => {\n                return (\n                  <li\n                    className=\"Carousel__item\"\n                    key={img}\n                    style={{\n                      transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n                      transition: `${animationDuration}ms`,\n                    }}\n                  >\n                    <img\n                      width={itemWidth}\n                      src={img}\n                      alt={`emoji-${index + 1}`}\n                    />\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n        <div>\n          <button\n            disabled={currentItemIndex <= 0 && !this.props.infinity}\n            type=\"button\"\n            onClick={() => {\n              this.handleNavButton(-step);\n            }}\n          >\n            Prev item\n          </button>\n          <button\n            data-cy=\"next\"\n            disabled={\n              currentItemIndex >= images.length - frameSize && !infinity\n            }\n            type=\"button\"\n            onClick={() => {\n              this.handleNavButton(step);\n            }}\n          >\n            Next item\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","// import { setPriority } from 'os';\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number,\n  frameSize: number,\n  animationDuration: number,\n  infinity: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          Item Width:\n          <input\n            id=\"itemId\"\n            type=\"number\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              this.setState({\n                itemWidth: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          Frame Size:\n          <input\n            id=\"frameId\"\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                frameSize: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          Step:\n          <input\n            id=\"stepId\"\n            type=\"number\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              this.setState({\n                step: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"animation\" className=\"App__label\">\n          Animation:\n          <input\n            id=\"animation\"\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={(event) => {\n              this.setState({\n                animationDuration: +event.target.value,\n              });\n            }}\n          />\n        </label>\n        <label htmlFor=\"infinity\" className=\"App__label\">\n          Infinity:\n          <input\n            id=\"infinity\"\n            type=\"checkbox\"\n            onChange={(event) => {\n              this.setState({\n                infinity: event.target.checked,\n              });\n            }}\n          />\n        </label>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}